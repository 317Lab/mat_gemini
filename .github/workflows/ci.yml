name: matlab

env:
  CMAKE_BUILD_TYPE: Release
  CTEST_NO_TESTS_ACTION: error
  CMAKE_BUILD_PARALLEL_LEVEL: 4

on:
  push:
    paths:
    - "**.m"
    - "**.cmake"
    - "**/CMakeLists.txt"
    - "cmake/libraries.json"
    - ".github/workflows/ci.yml"
    - "!scripts/**"

# full tests require R2023a -- MatGemini itself works with R2021a or newer

# R2020a is missing several "mustBe" functions
# R2020b is missing name-value arguments

# https://www.mathworks.com/support/requirements/supported-compilers-linux.html

# https://www.mathworks.com/content/dam/mathworks/mathworks-dot-com/support/sysreq/files/system-requirements-release-2021b-supported-compilers.pdf
# R2021a, R2021b: GCC-8

# R2022a, R2022b, R2023a, R2023b: GCC-10
# https://www.mathworks.com/content/dam/mathworks/mathworks-dot-com/support/sysreq/files/system-requirements-release-2023a-supported-compilers.pdf


jobs:

  linux:
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        release: [R2023a]
        os: [ubuntu-latest, macos-latest]
        include:
        - release: R2023b
          os: ubuntu-latest

    steps:

    - name: compatible GCC compiler (Linux)
      if: runner.os == 'Linux'
      run: |
        echo "CC=gcc-10" >> $GITHUB_ENV
        echo "CXX=g++-10" >> $GITHUB_ENV
        echo "FC=gfortran-10" >> $GITHUB_ENV

    - name: GCC compiler (macOS)
      if: runner.os == 'macOS'
      run: echo "FC=gfortran-13" >> $GITHUB_ENV

    - name: Install MATLAB
      uses: matlab-actions/setup-matlab@v2
      with:
        release: ${{ matrix.release }}

    - name: Checkout Gemini3D-External
      uses: actions/checkout@v4
      with:
        repository: gemini3d/external
        path: gemext

    - name: Install Prereqs (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt update
        sudo $(cmake -P gemext/scripts/requirements.cmake)

    - name: Install Prereqs (Macos)
      if: runner.os == 'macOS'
      run: $(cmake -P gemext/scripts/requirements.cmake)

    - name: Install Gemini3D libraries
      timeout-minutes: 15
      run: cmake -Dmumps_only:BOOL=true -Dprefix:PATH=${{ runner.temp }} -P build.cmake
      working-directory: gemext

    - name: Checkout Gemini3D
      uses: actions/checkout@v4
      with:
        repository: gemini3d/gemini3d
        path: gemini3d

    - name: Install Gemini3D
      timeout-minutes: 15
      run: |
        cmake -B build -DCMAKE_INSTALL_PREFIX:PATH=${{ runner.temp }} -DCMAKE_PREFIX_PATH:PATH=${{ runner.temp }}
        cmake --build build
        cmake --install build
      working-directory: gemini3d

    - name: Git Checkout ${{ github.action_repository }}
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Run Matlab tests (buildtool)
      timeout-minutes: 15
      uses: matlab-actions/run-build@v2
      env:
        GEMINI_ROOT: ${{ runner.temp }}
        GEMINI_CIROOT: ~/ci

# save CI time by not running duplicitive CMake tests
